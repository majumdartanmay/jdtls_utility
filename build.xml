<?xml version="1.0" encoding="UTF-8"?>
<project name="Setup JDTLS" default="init">

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <property file="build.properties" description="Read properties from build.properties"/>

    <target name = "determine_java">
        <condition property = "jdtls_java" value="${java.home}" else = "${jdtls_user_java}"  >
            <or>
                <not>
                    <isset property = "jdtls_user_java"/>
                </not>
                <equals arg1="${jdtls_user_java}" arg2=""/>
            </or>
        </condition>

        <echo message = "java home : ${jdtls_java}"/>
        <echo message = "Running java -version with the provided JDK"/>
        <exec executable="${jdtls_java}/bin/java">
            <arg value="-version"/>
        </exec>
    </target>

    <target name = "init" depends = "set_os, determine_java">
        <echo message = "OS  : ${os_pty}"/>
        <antcall target = "clean_directory">
            <param name = "directory" value = "${output}"/>
        </antcall>
        <antcall target = "download_file"/>
        <antcall target = "move_to_dest_dir" />
        <antcall target = "replace_template_values" />
    </target>

    <target name="clean_directory">
        <echo message = "Checking if ${directory} exists or not"/>
        <if>
            <available file="${directory}" type="dir"/>
            <then>
                <delete dir="${directory}" />
            </then>
        </if>
        <mkdir dir="${directory}" />
    </target>

    <target name="download_file">
        <get src="${jdtls_download_link}" 
        dest="${internal_output_path_full}"/>
    </target>

    <target name = "extract_tar_file">
        <untar src="${input_tar}" dest="${output_dir}" compression="gzip"/>
        <delete file="${input_tar}" />
    </target>

    <target name = "set_dest_property">
        <condition property = "jdtls_output_dir" value="${jdtls_output_dir}" else = "${output}" >
            <isset property = "jdtls_output_dir"/>
        </condition>
    </target>

    <target name = "move_to_dest_dir" depends = "set_dest_property">

        <echo message = "Extracting to ${jdtls_output_dir}" />

        <antcall target = "extract_tar_file">
            <param name = "input_tar" value = "${internal_output_path_full}"/>
            <param name = "output_dir" value = "${jdtls_output_dir}"/>
        </antcall>

    </target>

    <target name = "set_os">

        <condition property="os_pty" value = "win">
            <os family="windows"/>
        </condition>

        <condition property="os_pty" value = "mac">
            <os family="mac"/>
        </condition>

        <condition property="os_pty" value = "linux">
            <os family="unix"/>
        </condition>

        <echo message = "OS familiy : ${os_pty}"/>

    </target>

    <target name="find_equinox_launcher_jar" >
        <first id="first">
            <fileset dir="${jdtls_output_dir}/plugins" includes="org.eclipse.equinox.launcher_*.jar" />
        </first>
        <property name = "equinox_location" value = "${toString:first}"/>
        <echo message="${equinox_location}" />
    </target>

    <target name = "replace_template_values" depends = "set_os, set_dest_property, find_equinox_launcher_jar">
        <property name = "config_location" value = "${output}/${output_file_name}"/>

        <copy file="${input_file_template}" tofile="${config_location}" overwrite = "true"/>

        <replace file="${config_location}" token='@java_location@' value="${jdtls_java}" />
        <replace file="${config_location}" token="@equinox_path@" value="${equinox_location}" />
        <replace file="${config_location}" token="@jdtls_location@" value="${jdtls_output_dir}" />
        <replace file="${config_location}" token="@os_variant@" value="${os_pty}" />
        <replace file="${config_location}" token="\" value="/" />

        <antcall target = "print_contents">
            <param name = "input" value = "${config_location}" />
        </antcall>

    </target>

    <target name = "print_contents">
        <echo message = "Trying to print contents of ${input}" />
        <loadfile property="file.contents" srcFile="${input}"/>
        <echo>${file.contents}</echo>
    </target>

</project>

